{"ast":null,"code":"var _jsxFileName = \"/home/dimon/Todo/src/components/app/index.js\";\nimport React, { Component } from 'react';\nimport AppHeader from '../appHeader';\nimport Search from '../searchPanel';\nimport ItemStatusFilter from '../itemStatusFilter';\nimport TodoList from '../todoList';\nimport AddItem from '../addItem';\nimport './index.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 0;\n    this.state = {\n      todoData: [],\n      term: '',\n      filter: 'all'\n    };\n\n    this.deletItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'important')\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        };\n      });\n    };\n\n    this.onSearchChange = term => {\n      this.setState({\n        term\n      });\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  search(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.toUpperCase().indexOf(term.toUpperCase()) > -1;\n    });\n  }\n\n  filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n\n      case 'active':\n        return items.filter(item => !item.done);\n\n      case 'done':\n        return items.filter(item => item.done);\n\n      default:\n        return items;\n    }\n\n    ;\n  }\n\n  render() {\n    const {\n      todoData,\n      term,\n      filter\n    } = this.state;\n    const visibleItems = this.filter(this.search(todoData, term), filter);\n    const doneCount = todoData.filter(el => el.done).length; //const todoCount = this.state.todoData.filter((el) => !el.done);\n\n    const todoCount = todoData.length - doneCount;\n    return React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      toDo: todoCount,\n      done: doneCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Search, {\n      onSearchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      filter: filter,\n      onFilterChange: this.onFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(TodoList, {\n      todos: visibleItems,\n      onDeleted: this.deletItem,\n      onToggleImportant: this.onToggleImportant,\n      onToggleDone: this.onToggleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(AddItem, {\n      onAdded: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/dimon/Todo/src/components/app/index.js"],"names":["React","Component","AppHeader","Search","ItemStatusFilter","TodoList","AddItem","App","maxId","state","todoData","term","filter","deletItem","id","setState","idx","findIndex","el","newArray","slice","addItem","text","newItem","createTodoItem","newArr","onToggleImportant","toggleProperty","onToggleDone","onSearchChange","onFilterChange","label","important","done","arr","propName","oldItem","search","items","length","item","toUpperCase","indexOf","render","visibleItems","doneCount","todoCount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport AppHeader from '../appHeader';\nimport Search from '../searchPanel';\nimport ItemStatusFilter from '../itemStatusFilter';\nimport TodoList from '../todoList';\nimport AddItem from '../addItem';\n\nimport './index.css'\n\nclass App extends Component {\n\n  maxId = 0;\n\n  state = {\n    todoData:  [],\n    term: '',\n    filter: 'all'\n  };\n\n  createTodoItem(label) {\n  return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  };\n\n  deletItem = (id) => {\n    this.setState(({todoData}) => {\n\n      const idx = todoData.findIndex((el) => el.id === id);\n\n      const newArray = [\n        ...todoData.slice(0, idx),\n        ...todoData.slice(idx+1)\n      ];\n\n      return {\n        todoData: newArray\n      };\n    });\n  };\n\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({todoData}) => {\n        const newArr = [\n        ...todoData,\n        newItem\n      ];\n\n      return {\n        todoData: newArr\n      };\n    });\n  };\n\n  toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id);\n\n        const oldItem = arr[idx];\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\n\n        return [\n          ...arr.slice(0, idx),\n          newItem,\n          ...arr.slice(idx + 1)\n        ];\n    };\n\n  onToggleImportant = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'important')\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'done')\n      };\n    });\n  };\n\n  onSearchChange = (term) => {\n    this.setState({ term })\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter })\n  };\n\n  search(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.label\n                 .toUpperCase()\n                 .indexOf(term.toUpperCase()) > -1;\n    });\n  };\n\n  filter(items, filter) {\n\n    switch(filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter((item) => !item.done);\n      case 'done':\n        return items.filter((item) => item.done);\n      default:\n        return items;\n    };\n  };\n\n  render () {\n\n    const {todoData, term, filter} = this.state;\n\n    const visibleItems = this.filter(\n      this.search(todoData, term), filter);\n    const doneCount = todoData.filter((el) => el.done).length;\n  //const todoCount = this.state.todoData.filter((el) => !el.done);\n    const todoCount = todoData.length - doneCount;\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={todoCount} done={doneCount}/>\n        <div className=\"top-panel d-flex\">\n        <Search\n          onSearchChange={this.onSearchChange}/>\n        <ItemStatusFilter\n          filter={filter}\n          onFilterChange = {this.onFilterChange}/>\n        </div>\n        <TodoList\n          todos = {visibleItems}\n          onDeleted={this.deletItem}\n          onToggleImportant={this.onToggleImportant}\n          onToggleDone={this.onToggleDone}\n        />\n        <AddItem\n          onAdded={this.addItem}\n        />\n      </div>\n    )}\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}